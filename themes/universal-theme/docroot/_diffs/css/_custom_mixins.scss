/* ---------- Flexbox ---------- */

@mixin flexbox {
	@include experimental-value(display, box, -moz, -webkit, not -o, not -ms, not -khtml, not official);
	@include experimental-value(display, flex, -moz, -webkit, not -o, not -ms, not -khtml, official);
	@include experimental-value(display, flexbox, not -moz, not -webkit, not -o, -ms, not -khtml, not official);
}

@mixin inline-flex {
	@include experimental-value(display, inline-box, not -moz, -webkit, not -o, not -ms, not -khtml, not official);
	@include experimental-value(display, inline-flex, -moz, -webkit, not -o, not -ms, not -khtml, official);
	@include experimental-value(display, inline-flexbox, not -moz, not -webkit, not -o, -ms, not -khtml, not official);
}

/* ---------- Flex container behavior ---------- */

@mixin flex-direction($value: row) {
	$direction-value: normal;
	$orient-value: horizontal;

	@if $value == "row-reverse" {
		$direction-value: reverse;
	}
	@else if $value == "column" {
		$orient-value: vertical;
	}
	@else if $value == "column-reverse" {
		$direction-value: reverse;
		$orient-value: vertical;
	}

	@include experimental(box-direction, $direction-value, not -moz, -webkit, not -o, not -ms, not -khtml, not official);
	@include experimental(box-orient, $orient-value, not -moz, -webkit, not -o, not -ms, not -khtml, not official);
	@include experimental(flex-direction, $value, -moz, -webkit, not -o, -ms, not -khtml, official);
}

@mixin flex-wrap($value: nowrap) {
	$wrap-value: $value;

	@if $value == "nowrap" {
		$wrap-value: none;
	}

	@include experimental(flex-wrap, $value, -moz, -webkit, not -o, not -ms, not -khtml, official);
	@include experimental(flex-wrap, $wrap-value, not -moz, not -webkit, not -o, -ms, not -khtml, not official);
}

@mixin flex-flow($values: (row nowrap)) {
	@include experimental(flex-flow, $values, -moz, -webkit, not -o, -ms, not -khtml, official);
}

/* ---------- Flex container alignment ---------- */

@mixin align-content($value: stretch) {
	$align-value: $value;

	@if $value == "flex-start" {
		$align-value: start;
	}
	@else if $value == "flex-end" {
		$align-value: end;
	}

	@include experimental(flex-line-pack, $align-value, not -moz, not -webkit, not -o, -ms, not -khtml, not official);

	@include experimental(align-content, $value, -moz, -webkit, not -o, not -ms, not -khtml, official);
}

@mixin justify-content($value: flex-start) {
	$pack-value: $value;

	@if $value == "flex-start" {
		$pack-value: start;
	}
	@else if $value == "flex-end" {
		$pack-value: end
	}

	@include experimental(box-pack, $pack-value, not -moz, -webkit, not -o, not -ms, not -khtml, not official);
	@include experimental(flex-pack, $pack-value, not -moz, not -webkit, not -o, -ms, not -khtml, not official);
	@include experimental(justify-content, $value, -moz, -webkit, not -o, not -ms, not -khtml, official);
}

/* ---------- Flex items ---------- */

@mixin flex($values, $flex-width: false) {
	@include experimental(box-flex, $values, -moz, -webkit, not -o, not -ms, not -khtml, not official);
	@include experimental(flex, $values, -moz, -webkit, not -o, -ms, not -khtml, official);

	@if $flex-width {
		width: $flex-width;
	}
}

@mixin flex-basis($value: auto) {
	@include experimental(flex-basis, $value, -moz, -webkit, not -o, not -ms, not -khtml, official);
	@include experimental(flex-preferred-size, $value, not -moz, not -webkit, not -o, -ms, not -khtml, not official);
}

@mixin flex-grow($int: 0) {
	@include experimental(flex-grow, $int, -moz, -webkit, not -o, not -ms, not -khtml, official);
	@include experimental(flex-positive, $int, not -moz, not -webkit, not -o, -ms, not -khtml, not official);
}

@mixin flex-shrink($int: 1) {
	@include experimental(flex-negative, $int, not -moz, not -webkit, not -o, -ms, not -khtml, not official);
	@include experimental(flex-shrink, $int, -moz, -webkit, not -o, not -ms, not -khtml, official);
}

@mixin order($int: 0) {
	@include experimental(box-ordinal-group, $int, -moz, -webkit, not -o, not -ms, not -khtml, not official);
	@include experimental(flex-order, $int, not -moz, not -webkit, not -o, -ms, not -khtml, not official);
	@include experimental(order, $int, -moz, -webkit, not -o, -ms, not -khtml, official);
}

/* ---------- Flex item alignment ---------- */

@mixin align-items($value: stretch) {
	$align-value: $value;

	@if $value == "flex-start" {
		$align-value: start;
	}
	@else if $value == "flex-end" {
		$align-value: end;
	}

	@include experimental(box-align, $align-value, not -moz, -webkit, not -o, not -ms, not -khtml, not official);
	@include experimental(flex-align, $align-value, not -moz, not -webkit, not -o, -ms, not -khtml, not official);

	@include experimental(align-items, $value, -moz, -webkit, not -o, not -ms, not -khtml, official);
}

@mixin align-self($value: auto) {
	$align-value: $value;

	@if $value == "flex-start" {
		$align-value: start;
	}
	@else if $value == "flex-end" {
		$align-value: end;
	}

	@include experimental(flex-item-align, $align-value, not -moz, not -webkit, not -o, -ms, not -khtml, not official);

	@include experimental(align-self, $value, -moz, -webkit, not -o, not -ms, not -khtml, official);
}